diff --git a/src/net/minecraft/client/Minecraft.java b/src/net/minecraft/client/Minecraft.java
index 4b1041d..e308568 100644
--- a/src/net/minecraft/client/Minecraft.java
+++ b/src/net/minecraft/client/Minecraft.java
@@ -1,17 +1,5 @@
 package net.minecraft.client;
 
-import com.google.common.collect.Lists;
-import com.google.common.collect.Maps;
-import com.google.common.collect.Queues;
-import com.google.common.collect.Sets;
-import com.google.common.util.concurrent.Futures;
-import com.google.common.util.concurrent.ListenableFuture;
-import com.google.common.util.concurrent.ListenableFutureTask;
-import com.mojang.authlib.GameProfile;
-import com.mojang.authlib.GameProfileRepository;
-import com.mojang.authlib.minecraft.MinecraftSessionService;
-import com.mojang.authlib.properties.PropertyMap;
-import com.mojang.authlib.yggdrasil.YggdrasilAuthenticationService;
 import java.awt.image.BufferedImage;
 import java.io.File;
 import java.io.IOException;
@@ -35,7 +23,42 @@ import java.util.UUID;
 import java.util.concurrent.Callable;
 import java.util.concurrent.Executors;
 import java.util.concurrent.FutureTask;
+
 import javax.imageio.ImageIO;
+
+import org.apache.commons.io.IOUtils;
+import org.apache.commons.lang3.Validate;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
+import org.lwjgl.LWJGLException;
+import org.lwjgl.Sys;
+import org.lwjgl.input.Keyboard;
+import org.lwjgl.input.Mouse;
+import org.lwjgl.opengl.ContextCapabilities;
+import org.lwjgl.opengl.Display;
+import org.lwjgl.opengl.DisplayMode;
+import org.lwjgl.opengl.GLContext;
+import org.lwjgl.opengl.OpenGLException;
+import org.lwjgl.opengl.PixelFormat;
+import org.lwjgl.util.glu.GLU;
+
+import com.google.common.collect.Lists;
+import com.google.common.collect.Maps;
+import com.google.common.collect.Queues;
+import com.google.common.collect.Sets;
+import com.google.common.util.concurrent.Futures;
+import com.google.common.util.concurrent.ListenableFuture;
+import com.google.common.util.concurrent.ListenableFutureTask;
+import com.mojang.authlib.GameProfile;
+import com.mojang.authlib.GameProfileRepository;
+import com.mojang.authlib.minecraft.MinecraftSessionService;
+import com.mojang.authlib.properties.PropertyMap;
+import com.mojang.authlib.yggdrasil.YggdrasilAuthenticationService;
+
+import co.uk.hexeption.opiates.Opiates;
+import co.uk.hexeption.opiates.event.api.EventManager;
+import co.uk.hexeption.opiates.event.events.EventKeyboard;
+import co.uk.hexeption.opiates.gui.OpiatesMainMenu;
 import net.minecraft.block.Block;
 import net.minecraft.block.material.Material;
 import net.minecraft.block.state.IBlockState;
@@ -48,7 +71,6 @@ import net.minecraft.client.gui.GuiControls;
 import net.minecraft.client.gui.GuiGameOver;
 import net.minecraft.client.gui.GuiIngame;
 import net.minecraft.client.gui.GuiIngameMenu;
-import net.minecraft.client.gui.GuiMainMenu;
 import net.minecraft.client.gui.GuiMemoryErrorScreen;
 import net.minecraft.client.gui.GuiMultiplayer;
 import net.minecraft.client.gui.GuiNewChat;
@@ -180,21 +202,6 @@ import net.minecraft.world.chunk.storage.AnvilSaveConverter;
 import net.minecraft.world.storage.ISaveFormat;
 import net.minecraft.world.storage.ISaveHandler;
 import net.minecraft.world.storage.WorldInfo;
-import org.apache.commons.io.IOUtils;
-import org.apache.commons.lang3.Validate;
-import org.apache.logging.log4j.LogManager;
-import org.apache.logging.log4j.Logger;
-import org.lwjgl.LWJGLException;
-import org.lwjgl.Sys;
-import org.lwjgl.input.Keyboard;
-import org.lwjgl.input.Mouse;
-import org.lwjgl.opengl.ContextCapabilities;
-import org.lwjgl.opengl.Display;
-import org.lwjgl.opengl.DisplayMode;
-import org.lwjgl.opengl.GLContext;
-import org.lwjgl.opengl.OpenGLException;
-import org.lwjgl.opengl.PixelFormat;
-import org.lwjgl.util.glu.GLU;
 
 public class Minecraft implements IThreadListener, ISnooperInfo
 {
@@ -213,7 +220,7 @@ public class Minecraft implements IThreadListener, ISnooperInfo
     private ServerData currentServerData;
 
     /** The RenderEngine instance used by Minecraft */
-    private TextureManager renderEngine;
+    public TextureManager renderEngine;
 
     /**
      * Set to 'this' in Minecraft constructor; used by some settings get methods
@@ -242,7 +249,7 @@ public class Minecraft implements IThreadListener, ISnooperInfo
     private RenderItem renderItem;
     private ItemRenderer itemRenderer;
     public EntityPlayerSP thePlayer;
-    private Entity renderViewEntity;
+    public Entity renderViewEntity;
     public Entity pointedEntity;
     public EffectRenderer effectRenderer;
     private final Session session;
@@ -588,11 +595,13 @@ public class Minecraft implements IThreadListener, ISnooperInfo
 
         if (this.serverName != null)
         {
-            this.displayGuiScreen(new GuiConnecting(new GuiMainMenu(), this, this.serverName, this.serverPort));
+        	//TODO: Client
+            this.displayGuiScreen(new GuiConnecting(new OpiatesMainMenu(), this, this.serverName, this.serverPort));
         }
         else
         {
-            this.displayGuiScreen(new GuiMainMenu());
+        	//TODO: Client
+            this.displayGuiScreen(new OpiatesMainMenu());
         }
 
         this.renderEngine.deleteTexture(this.mojangLogo);
@@ -616,6 +625,10 @@ public class Minecraft implements IThreadListener, ISnooperInfo
         }
 
         this.renderGlobal.makeEntityOutlineShader();
+        
+        //TODO: Client
+        Opiates opiates = new Opiates();
+        opiates.startClient();
     }
 
     private void registerMetadataSerializers()
@@ -997,14 +1010,16 @@ public class Minecraft implements IThreadListener, ISnooperInfo
 
         if (guiScreenIn == null && this.theWorld == null)
         {
-            guiScreenIn = new GuiMainMenu();
+        	//TODO: Client
+            guiScreenIn = new OpiatesMainMenu();
         }
         else if (guiScreenIn == null && this.thePlayer.getHealth() <= 0.0F)
         {
             guiScreenIn = new GuiGameOver((ITextComponent)null);
         }
 
-        if (guiScreenIn instanceof GuiMainMenu || guiScreenIn instanceof GuiMultiplayer)
+        //TODO: Client
+        if (guiScreenIn instanceof OpiatesMainMenu || guiScreenIn instanceof GuiMultiplayer)
         {
             this.gameSettings.showDebugInfo = false;
             this.ingameGUI.getChatGUI().clearChatMessages();
@@ -1996,6 +2011,9 @@ public class Minecraft implements IThreadListener, ISnooperInfo
 
             if (flag)
             {
+            	//TODO: Client
+                EventManager.call(new EventKeyboard(i));
+                
                 if (i == 62 && this.entityRenderer != null)
                 {
                     this.entityRenderer.switchUseShader();
diff --git a/src/net/minecraft/client/entity/EntityPlayerSP.java b/src/net/minecraft/client/entity/EntityPlayerSP.java
index f5794b7..3414032 100644
--- a/src/net/minecraft/client/entity/EntityPlayerSP.java
+++ b/src/net/minecraft/client/entity/EntityPlayerSP.java
@@ -1,5 +1,9 @@
 package net.minecraft.client.entity;
 
+import co.uk.hexeption.opiates.Opiates;
+import co.uk.hexeption.opiates.command.CommandManager;
+import co.uk.hexeption.opiates.event.api.EventManager;
+import co.uk.hexeption.opiates.event.events.update.EventUpdate;
 import net.minecraft.client.Minecraft;
 import net.minecraft.client.audio.ElytraSound;
 import net.minecraft.client.audio.MovingSoundMinecartRiding;
@@ -206,6 +210,9 @@ public class EntityPlayerSP extends AbstractClientPlayer
     {
         if (this.worldObj.isBlockLoaded(new BlockPos(this.posX, 0.0D, this.posZ)))
         {
+        	//TODO: Client
+        	EventManager.call(new EventUpdate());
+        	
             super.onUpdate();
 
             if (this.isRiding())
@@ -335,7 +342,12 @@ public class EntityPlayerSP extends AbstractClientPlayer
      */
     public void sendChatMessage(String message)
     {
-        this.sendQueue.addToSendQueue(new CPacketChatMessage(message));
+    	if (message.startsWith(CommandManager.CMD_Prefix))
+        {
+            Opiates.getInstance().getCommandManager().callCommand(message);
+        }else{
+        	this.sendQueue.addToSendQueue(new CPacketChatMessage(message));
+        }
     }
 
     public void swingArm(EnumHand hand)
diff --git a/src/net/minecraft/client/gui/GuiGameOver.java b/src/net/minecraft/client/gui/GuiGameOver.java
index a420e6c..81014a9 100644
--- a/src/net/minecraft/client/gui/GuiGameOver.java
+++ b/src/net/minecraft/client/gui/GuiGameOver.java
@@ -1,6 +1,8 @@
 package net.minecraft.client.gui;
 
 import java.io.IOException;
+
+import co.uk.hexeption.opiates.gui.OpiatesMainMenu;
 import net.minecraft.client.multiplayer.WorldClient;
 import net.minecraft.client.renderer.GlStateManager;
 import net.minecraft.client.resources.I18n;
@@ -74,7 +76,8 @@ public class GuiGameOver extends GuiScreen implements GuiYesNoCallback
             case 1:
                 if (this.mc.theWorld.getWorldInfo().isHardcoreModeEnabled())
                 {
-                    this.mc.displayGuiScreen(new GuiMainMenu());
+                	//TODO: Client
+                    this.mc.displayGuiScreen(new OpiatesMainMenu());
                 }
                 else
                 {
@@ -95,7 +98,9 @@ public class GuiGameOver extends GuiScreen implements GuiYesNoCallback
             }
 
             this.mc.loadWorld((WorldClient)null);
-            this.mc.displayGuiScreen(new GuiMainMenu());
+            
+            //TODO: Client
+            this.mc.displayGuiScreen(new OpiatesMainMenu());
         }
         else
         {
diff --git a/src/net/minecraft/client/gui/GuiIngame.java b/src/net/minecraft/client/gui/GuiIngame.java
index e80aefa..a87d837 100644
--- a/src/net/minecraft/client/gui/GuiIngame.java
+++ b/src/net/minecraft/client/gui/GuiIngame.java
@@ -4,6 +4,10 @@ import com.google.common.base.Predicate;
 import com.google.common.collect.Iterables;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Ordering;
+
+import co.uk.hexeption.opiates.event.api.EventManager;
+import co.uk.hexeption.opiates.event.events.render.EventRender2D;
+
 import java.util.Collection;
 import java.util.List;
 import java.util.Random;
@@ -375,6 +379,14 @@ public class GuiIngame extends Gui
         GlStateManager.disableLighting();
         GlStateManager.enableAlpha();
         String s = this.mc.func_184123_d();
+        
+        //TODO: Client
+        GlStateManager.pushMatrix();
+        final ScaledResolution sr = new ScaledResolution(mc);
+        final EventRender2D event = new EventRender2D(sr.getScaledWidth(), sr.getScaledHeight());
+        EventManager.call(event);
+        GlStateManager.disableBlend();
+        GlStateManager.popMatrix();
     }
 
     private void func_184045_a(float p_184045_1_, ScaledResolution p_184045_2_)
diff --git a/src/net/minecraft/client/gui/GuiIngameMenu.java b/src/net/minecraft/client/gui/GuiIngameMenu.java
index 762c0d0..7d478ea 100644
--- a/src/net/minecraft/client/gui/GuiIngameMenu.java
+++ b/src/net/minecraft/client/gui/GuiIngameMenu.java
@@ -1,6 +1,9 @@
 package net.minecraft.client.gui;
 
 import java.io.IOException;
+
+import co.uk.hexeption.opiates.gui.OpiatesMainMenu;
+import co.uk.hexeption.opiates.gui.OpiatesOptions;
 import net.minecraft.client.gui.achievement.GuiAchievements;
 import net.minecraft.client.gui.achievement.GuiStats;
 import net.minecraft.client.multiplayer.WorldClient;
@@ -35,6 +38,7 @@ public class GuiIngameMenu extends GuiScreen
         this.buttonList.add(guibutton = new GuiButton(7, this.width / 2 + 2, this.height / 4 + 96 + i, 98, 20, I18n.format("menu.shareToLan", new Object[0])));
         this.buttonList.add(new GuiButton(5, this.width / 2 - 100, this.height / 4 + 48 + i, 98, 20, I18n.format("gui.achievements", new Object[0])));
         this.buttonList.add(new GuiButton(6, this.width / 2 + 2, this.height / 4 + 48 + i, 98, 20, I18n.format("gui.stats", new Object[0])));
+        this.buttonList.add(new GuiButton(100,this.width / 2 - 100, this.height / 4 + 72 + i, "Opaiates"));
         guibutton.enabled = this.mc.isSingleplayer() && !this.mc.getIntegratedServer().getPublic();
     }
 
@@ -58,16 +62,20 @@ public class GuiIngameMenu extends GuiScreen
 
                 if (flag)
                 {
-                    this.mc.displayGuiScreen(new GuiMainMenu());
+                	//TODO: Client
+                    this.mc.displayGuiScreen(new OpiatesMainMenu());
                 }
                 else if (flag1)
                 {
                     RealmsBridge realmsbridge = new RealmsBridge();
-                    realmsbridge.switchToRealms(new GuiMainMenu());
+                    
+                    //TODO: Client
+                    realmsbridge.switchToRealms(new OpiatesMainMenu());
                 }
                 else
                 {
-                    this.mc.displayGuiScreen(new GuiMultiplayer(new GuiMainMenu()));
+                	//TODO: Client
+                    this.mc.displayGuiScreen(new GuiMultiplayer(new OpiatesMainMenu()));
                 }
 
             case 2:
@@ -90,6 +98,10 @@ public class GuiIngameMenu extends GuiScreen
 
             case 7:
                 this.mc.displayGuiScreen(new GuiShareToLan(this));
+                break;
+            case 100:
+            	this.mc.displayGuiScreen(new OpiatesOptions(this));
+            	break;
         }
     }
 
diff --git a/src/net/minecraft/client/gui/GuiMemoryErrorScreen.java b/src/net/minecraft/client/gui/GuiMemoryErrorScreen.java
index e943b88..7ce8a76 100644
--- a/src/net/minecraft/client/gui/GuiMemoryErrorScreen.java
+++ b/src/net/minecraft/client/gui/GuiMemoryErrorScreen.java
@@ -1,6 +1,8 @@
 package net.minecraft.client.gui;
 
 import java.io.IOException;
+
+import co.uk.hexeption.opiates.gui.OpiatesMainMenu;
 import net.minecraft.client.resources.I18n;
 
 public class GuiMemoryErrorScreen extends GuiScreen
@@ -23,7 +25,8 @@ public class GuiMemoryErrorScreen extends GuiScreen
     {
         if (button.id == 0)
         {
-            this.mc.displayGuiScreen(new GuiMainMenu());
+        	//TODO: Client
+            this.mc.displayGuiScreen(new OpiatesMainMenu());
         }
         else if (button.id == 1)
         {
diff --git a/src/net/minecraft/client/main/Main.java b/src/net/minecraft/client/main/Main.java
index 96e3c33..f2ac0d0 100644
--- a/src/net/minecraft/client/main/Main.java
+++ b/src/net/minecraft/client/main/Main.java
@@ -40,8 +40,8 @@ public class Main
         OptionSpec<String> optionspec10 = optionparser.accepts("uuid").withRequiredArg();
         OptionSpec<String> optionspec11 = optionparser.accepts("accessToken").withRequiredArg().required();
         OptionSpec<String> optionspec12 = optionparser.accepts("version").withRequiredArg().required();
-        OptionSpec<Integer> optionspec13 = optionparser.accepts("width").withRequiredArg().ofType(Integer.class).defaultsTo(Integer.valueOf(854), new Integer[0]);
-        OptionSpec<Integer> optionspec14 = optionparser.accepts("height").withRequiredArg().ofType(Integer.class).defaultsTo(Integer.valueOf(480), new Integer[0]);
+        OptionSpec<Integer> optionspec13 = optionparser.accepts("width").withRequiredArg().ofType(Integer.class).defaultsTo(Integer.valueOf(1280), new Integer[0]);
+        OptionSpec<Integer> optionspec14 = optionparser.accepts("height").withRequiredArg().ofType(Integer.class).defaultsTo(Integer.valueOf(720), new Integer[0]);
         OptionSpec<String> optionspec15 = optionparser.accepts("userProperties").withRequiredArg().defaultsTo("{}", new String[0]);
         OptionSpec<String> optionspec16 = optionparser.accepts("profileProperties").withRequiredArg().defaultsTo("{}", new String[0]);
         OptionSpec<String> optionspec17 = optionparser.accepts("assetIndex").withRequiredArg();
diff --git a/src/net/minecraft/client/network/NetHandlerPlayClient.java b/src/net/minecraft/client/network/NetHandlerPlayClient.java
index 3d96d60..a102b63 100644
--- a/src/net/minecraft/client/network/NetHandlerPlayClient.java
+++ b/src/net/minecraft/client/network/NetHandlerPlayClient.java
@@ -1,10 +1,5 @@
 package net.minecraft.client.network;
 
-import com.google.common.collect.Maps;
-import com.google.common.util.concurrent.FutureCallback;
-import com.google.common.util.concurrent.Futures;
-import com.mojang.authlib.GameProfile;
-import io.netty.buffer.Unpooled;
 import java.io.File;
 import java.io.IOException;
 import java.net.URI;
@@ -12,9 +7,20 @@ import java.net.URISyntaxException;
 import java.util.Collection;
 import java.util.List;
 import java.util.Map;
+import java.util.Map.Entry;
 import java.util.Random;
 import java.util.UUID;
-import java.util.Map.Entry;
+
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
+
+import com.google.common.collect.Maps;
+import com.google.common.util.concurrent.FutureCallback;
+import com.google.common.util.concurrent.Futures;
+import com.mojang.authlib.GameProfile;
+
+import co.uk.hexeption.opiates.gui.OpiatesMainMenu;
+import io.netty.buffer.Unpooled;
 import net.minecraft.block.Block;
 import net.minecraft.client.ClientBrandRetriever;
 import net.minecraft.client.Minecraft;
@@ -27,7 +33,6 @@ import net.minecraft.client.gui.GuiCommandBlock;
 import net.minecraft.client.gui.GuiDisconnected;
 import net.minecraft.client.gui.GuiDownloadTerrain;
 import net.minecraft.client.gui.GuiGameOver;
-import net.minecraft.client.gui.GuiMainMenu;
 import net.minecraft.client.gui.GuiMerchant;
 import net.minecraft.client.gui.GuiMultiplayer;
 import net.minecraft.client.gui.GuiScreen;
@@ -230,8 +235,6 @@ import net.minecraft.world.WorldProviderSurface;
 import net.minecraft.world.WorldSettings;
 import net.minecraft.world.chunk.Chunk;
 import net.minecraft.world.storage.MapData;
-import org.apache.logging.log4j.LogManager;
-import org.apache.logging.log4j.Logger;
 
 public class NetHandlerPlayClient implements INetHandlerPlayClient
 {
@@ -837,7 +840,8 @@ public class NetHandlerPlayClient implements INetHandlerPlayClient
         }
         else
         {
-            this.gameController.displayGuiScreen(new GuiDisconnected(new GuiMultiplayer(new GuiMainMenu()), "disconnect.lost", reason));
+        	//TODO: Client
+            this.gameController.displayGuiScreen(new GuiDisconnected(new GuiMultiplayer(new OpiatesMainMenu()), "disconnect.lost", reason));
         }
     }
 
diff --git a/src/net/minecraft/client/renderer/entity/RenderLivingBase.java b/src/net/minecraft/client/renderer/entity/RenderLivingBase.java
index 454fb63..7465f48 100644
--- a/src/net/minecraft/client/renderer/entity/RenderLivingBase.java
+++ b/src/net/minecraft/client/renderer/entity/RenderLivingBase.java
@@ -1,8 +1,17 @@
 package net.minecraft.client.renderer.entity;
 
-import com.google.common.collect.Lists;
 import java.nio.FloatBuffer;
 import java.util.List;
+
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
+
+import com.google.common.collect.Lists;
+
+import co.uk.hexeption.opiates.Opiates;
+import co.uk.hexeption.opiates.module.modules.render.OutlineESP;
+import co.uk.hexeption.opiates.utils.OutlineUtils;
+import co.uk.hexeption.opiates.wrapper.Wrapper;
 import net.minecraft.client.Minecraft;
 import net.minecraft.client.entity.EntityPlayerSP;
 import net.minecraft.client.model.ModelBase;
@@ -11,7 +20,14 @@ import net.minecraft.client.renderer.GlStateManager;
 import net.minecraft.client.renderer.OpenGlHelper;
 import net.minecraft.client.renderer.entity.layers.LayerRenderer;
 import net.minecraft.client.renderer.texture.DynamicTexture;
+import net.minecraft.entity.EntityAgeable;
+import net.minecraft.entity.EntityFlying;
 import net.minecraft.entity.EntityLivingBase;
+import net.minecraft.entity.monster.EntityGolem;
+import net.minecraft.entity.monster.EntityMob;
+import net.minecraft.entity.monster.EntitySlime;
+import net.minecraft.entity.passive.EntityAmbientCreature;
+import net.minecraft.entity.passive.EntityAnimal;
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.entity.player.EnumPlayerModelParts;
 import net.minecraft.scoreboard.Team;
@@ -19,8 +35,6 @@ import net.minecraft.src.Config;
 import net.minecraft.src.Reflector;
 import net.minecraft.util.math.MathHelper;
 import net.minecraft.util.text.TextFormatting;
-import org.apache.logging.log4j.LogManager;
-import org.apache.logging.log4j.Logger;
 import shadersmod.client.Shaders;
 
 public abstract class RenderLivingBase<T extends EntityLivingBase> extends Render<T>
@@ -192,7 +206,64 @@ public abstract class RenderLivingBase<T extends EntityLivingBase> extends Rende
                 else
                 {
                     boolean flag = this.setDoRenderBrightness(entity, partialTicks);
-                    this.renderModel(entity, f6, f5, f8, f2, f7, f4);
+                  	
+                    //TODO: Values
+					if (Opiates.getInstance().getModuleManager().getModule(OutlineESP.class).getState()) {
+						GlStateManager.depthMask(true);
+						if (!(entity instanceof EntityPlayer) || ((EntityPlayer) entity).isSpectator()) {
+							this.renderLayers(entity, f6, f5, partialTicks, f8, f2, f7, f4);
+						}
+
+						if (entity instanceof EntityPlayer) {
+							if (entity != Wrapper.getInstance().getPlayer()) {
+								this.renderModel(entity, f6, f5, f8, f2, f7, f4);
+								OutlineUtils.renderOne();
+								this.renderModel(entity, f6, f5, f8, f2, f7, f4);
+								OutlineUtils.renderTwo();
+								this.renderModel(entity, f6, f5, f8, f2, f7, f4);
+								OutlineUtils.renderThree();
+								OutlineUtils.renderFour();
+								this.renderModel(entity, f6, f5, f8, f2, f7, f4);
+								OutlineUtils.renderFive();
+							}
+
+						} else {
+							this.renderModel(entity, f6, f5, f8, f2, f7, f4);
+						}
+
+						if (entity instanceof EntityMob || entity instanceof EntitySlime || entity instanceof EntityAmbientCreature || entity instanceof EntityFlying) {
+							this.renderModel(entity, f6, f5, f8, f2, f7, f4);
+							OutlineUtils.renderOne();
+							this.renderModel(entity, f6, f5, f8, f2, f7, f4);
+							OutlineUtils.renderTwo();
+							this.renderModel(entity, f6, f5, f8, f2, f7, f4);
+							OutlineUtils.renderThree();
+							OutlineUtils.renderFour();
+							this.renderModel(entity, f6, f5, f8, f2, f7, f4);
+							OutlineUtils.renderFive();
+
+						} else {
+							this.renderModel(entity, f6, f5, f8, f2, f7, f4);
+						}
+
+						if (entity instanceof EntityAnimal || entity instanceof EntityGolem || entity instanceof EntityAgeable) {
+							this.renderModel(entity, f6, f5, f8, f2, f7, f4);
+							OutlineUtils.renderOne();
+							this.renderModel(entity, f6, f5, f8, f2, f7, f4);
+							OutlineUtils.renderTwo();
+							this.renderModel(entity, f6, f5, f8, f2, f7, f4);
+							OutlineUtils.renderThree();
+							OutlineUtils.renderFour();
+							this.renderModel(entity, f6, f5, f8, f2, f7, f4);
+							OutlineUtils.renderFive();
+
+						} else {
+							this.renderModel(entity, f6, f5, f8, f2, f7, f4);
+						}
+						this.renderModel(entity, f6, f5, f8, f2, f7, f4);
+					} else {
+						this.renderModel(entity, f6, f5, f8, f2, f7, f4);
+					}
 
                     if (flag)
                     {
diff --git a/src/shadersmod/client/Shaders.java b/src/shadersmod/client/Shaders.java
index 050f4e5..dbcae18 100644
--- a/src/shadersmod/client/Shaders.java
+++ b/src/shadersmod/client/Shaders.java
@@ -745,7 +745,7 @@ public class Shaders
             }
 
             updateBlockLightLevel();
-            mc.scheduleResourcesRefresh();
+//            mc.scheduleResourcesRefresh();
         }
     }
 
@@ -3017,7 +3017,6 @@ public class Shaders
     public static void beginRender(Minecraft minecraft, float partialTicks, long finishTimeNano)
     {
         checkGLError("pre beginRender");
-        checkWorldChanged(mc.theWorld);
         mc = minecraft;
         mc.mcProfiler.startSection("init");
         entityRenderer = mc.entityRenderer;
