diff --git a/src/net/minecraft/client/Minecraft.java b/src/net/minecraft/client/Minecraft.java
index e308568..4b1041d 100644
--- a/src/net/minecraft/client/Minecraft.java
+++ b/src/net/minecraft/client/Minecraft.java
@@ -1,5 +1,17 @@
 package net.minecraft.client;
 
+import com.google.common.collect.Lists;
+import com.google.common.collect.Maps;
+import com.google.common.collect.Queues;
+import com.google.common.collect.Sets;
+import com.google.common.util.concurrent.Futures;
+import com.google.common.util.concurrent.ListenableFuture;
+import com.google.common.util.concurrent.ListenableFutureTask;
+import com.mojang.authlib.GameProfile;
+import com.mojang.authlib.GameProfileRepository;
+import com.mojang.authlib.minecraft.MinecraftSessionService;
+import com.mojang.authlib.properties.PropertyMap;
+import com.mojang.authlib.yggdrasil.YggdrasilAuthenticationService;
 import java.awt.image.BufferedImage;
 import java.io.File;
 import java.io.IOException;
@@ -23,42 +35,7 @@ import java.util.UUID;
 import java.util.concurrent.Callable;
 import java.util.concurrent.Executors;
 import java.util.concurrent.FutureTask;
-
 import javax.imageio.ImageIO;
-
-import org.apache.commons.io.IOUtils;
-import org.apache.commons.lang3.Validate;
-import org.apache.logging.log4j.LogManager;
-import org.apache.logging.log4j.Logger;
-import org.lwjgl.LWJGLException;
-import org.lwjgl.Sys;
-import org.lwjgl.input.Keyboard;
-import org.lwjgl.input.Mouse;
-import org.lwjgl.opengl.ContextCapabilities;
-import org.lwjgl.opengl.Display;
-import org.lwjgl.opengl.DisplayMode;
-import org.lwjgl.opengl.GLContext;
-import org.lwjgl.opengl.OpenGLException;
-import org.lwjgl.opengl.PixelFormat;
-import org.lwjgl.util.glu.GLU;
-
-import com.google.common.collect.Lists;
-import com.google.common.collect.Maps;
-import com.google.common.collect.Queues;
-import com.google.common.collect.Sets;
-import com.google.common.util.concurrent.Futures;
-import com.google.common.util.concurrent.ListenableFuture;
-import com.google.common.util.concurrent.ListenableFutureTask;
-import com.mojang.authlib.GameProfile;
-import com.mojang.authlib.GameProfileRepository;
-import com.mojang.authlib.minecraft.MinecraftSessionService;
-import com.mojang.authlib.properties.PropertyMap;
-import com.mojang.authlib.yggdrasil.YggdrasilAuthenticationService;
-
-import co.uk.hexeption.opiates.Opiates;
-import co.uk.hexeption.opiates.event.api.EventManager;
-import co.uk.hexeption.opiates.event.events.EventKeyboard;
-import co.uk.hexeption.opiates.gui.OpiatesMainMenu;
 import net.minecraft.block.Block;
 import net.minecraft.block.material.Material;
 import net.minecraft.block.state.IBlockState;
@@ -71,6 +48,7 @@ import net.minecraft.client.gui.GuiControls;
 import net.minecraft.client.gui.GuiGameOver;
 import net.minecraft.client.gui.GuiIngame;
 import net.minecraft.client.gui.GuiIngameMenu;
+import net.minecraft.client.gui.GuiMainMenu;
 import net.minecraft.client.gui.GuiMemoryErrorScreen;
 import net.minecraft.client.gui.GuiMultiplayer;
 import net.minecraft.client.gui.GuiNewChat;
@@ -202,6 +180,21 @@ import net.minecraft.world.chunk.storage.AnvilSaveConverter;
 import net.minecraft.world.storage.ISaveFormat;
 import net.minecraft.world.storage.ISaveHandler;
 import net.minecraft.world.storage.WorldInfo;
+import org.apache.commons.io.IOUtils;
+import org.apache.commons.lang3.Validate;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
+import org.lwjgl.LWJGLException;
+import org.lwjgl.Sys;
+import org.lwjgl.input.Keyboard;
+import org.lwjgl.input.Mouse;
+import org.lwjgl.opengl.ContextCapabilities;
+import org.lwjgl.opengl.Display;
+import org.lwjgl.opengl.DisplayMode;
+import org.lwjgl.opengl.GLContext;
+import org.lwjgl.opengl.OpenGLException;
+import org.lwjgl.opengl.PixelFormat;
+import org.lwjgl.util.glu.GLU;
 
 public class Minecraft implements IThreadListener, ISnooperInfo
 {
@@ -220,7 +213,7 @@ public class Minecraft implements IThreadListener, ISnooperInfo
     private ServerData currentServerData;
 
     /** The RenderEngine instance used by Minecraft */
-    public TextureManager renderEngine;
+    private TextureManager renderEngine;
 
     /**
      * Set to 'this' in Minecraft constructor; used by some settings get methods
@@ -249,7 +242,7 @@ public class Minecraft implements IThreadListener, ISnooperInfo
     private RenderItem renderItem;
     private ItemRenderer itemRenderer;
     public EntityPlayerSP thePlayer;
-    public Entity renderViewEntity;
+    private Entity renderViewEntity;
     public Entity pointedEntity;
     public EffectRenderer effectRenderer;
     private final Session session;
@@ -595,13 +588,11 @@ public class Minecraft implements IThreadListener, ISnooperInfo
 
         if (this.serverName != null)
         {
-        	//TODO: Client
-            this.displayGuiScreen(new GuiConnecting(new OpiatesMainMenu(), this, this.serverName, this.serverPort));
+            this.displayGuiScreen(new GuiConnecting(new GuiMainMenu(), this, this.serverName, this.serverPort));
         }
         else
         {
-        	//TODO: Client
-            this.displayGuiScreen(new OpiatesMainMenu());
+            this.displayGuiScreen(new GuiMainMenu());
         }
 
         this.renderEngine.deleteTexture(this.mojangLogo);
@@ -625,10 +616,6 @@ public class Minecraft implements IThreadListener, ISnooperInfo
         }
 
         this.renderGlobal.makeEntityOutlineShader();
-        
-        //TODO: Client
-        Opiates opiates = new Opiates();
-        opiates.startClient();
     }
 
     private void registerMetadataSerializers()
@@ -1010,16 +997,14 @@ public class Minecraft implements IThreadListener, ISnooperInfo
 
         if (guiScreenIn == null && this.theWorld == null)
         {
-        	//TODO: Client
-            guiScreenIn = new OpiatesMainMenu();
+            guiScreenIn = new GuiMainMenu();
         }
         else if (guiScreenIn == null && this.thePlayer.getHealth() <= 0.0F)
         {
             guiScreenIn = new GuiGameOver((ITextComponent)null);
         }
 
-        //TODO: Client
-        if (guiScreenIn instanceof OpiatesMainMenu || guiScreenIn instanceof GuiMultiplayer)
+        if (guiScreenIn instanceof GuiMainMenu || guiScreenIn instanceof GuiMultiplayer)
         {
             this.gameSettings.showDebugInfo = false;
             this.ingameGUI.getChatGUI().clearChatMessages();
@@ -2011,9 +1996,6 @@ public class Minecraft implements IThreadListener, ISnooperInfo
 
             if (flag)
             {
-            	//TODO: Client
-                EventManager.call(new EventKeyboard(i));
-                
                 if (i == 62 && this.entityRenderer != null)
                 {
                     this.entityRenderer.switchUseShader();
diff --git a/src/net/minecraft/client/entity/EntityPlayerSP.java b/src/net/minecraft/client/entity/EntityPlayerSP.java
index bfad76a..f5794b7 100644
--- a/src/net/minecraft/client/entity/EntityPlayerSP.java
+++ b/src/net/minecraft/client/entity/EntityPlayerSP.java
@@ -1,7 +1,5 @@
 package net.minecraft.client.entity;
 
-import co.uk.hexeption.opiates.event.api.EventManager;
-import co.uk.hexeption.opiates.event.events.update.EventUpdate;
 import net.minecraft.client.Minecraft;
 import net.minecraft.client.audio.ElytraSound;
 import net.minecraft.client.audio.MovingSoundMinecartRiding;
@@ -208,9 +206,6 @@ public class EntityPlayerSP extends AbstractClientPlayer
     {
         if (this.worldObj.isBlockLoaded(new BlockPos(this.posX, 0.0D, this.posZ)))
         {
-        	//TODO: Client
-        	EventManager.call(new EventUpdate());
-        	
             super.onUpdate();
 
             if (this.isRiding())
diff --git a/src/net/minecraft/client/gui/GuiGameOver.java b/src/net/minecraft/client/gui/GuiGameOver.java
index 81014a9..a420e6c 100644
--- a/src/net/minecraft/client/gui/GuiGameOver.java
+++ b/src/net/minecraft/client/gui/GuiGameOver.java
@@ -1,8 +1,6 @@
 package net.minecraft.client.gui;
 
 import java.io.IOException;
-
-import co.uk.hexeption.opiates.gui.OpiatesMainMenu;
 import net.minecraft.client.multiplayer.WorldClient;
 import net.minecraft.client.renderer.GlStateManager;
 import net.minecraft.client.resources.I18n;
@@ -76,8 +74,7 @@ public class GuiGameOver extends GuiScreen implements GuiYesNoCallback
             case 1:
                 if (this.mc.theWorld.getWorldInfo().isHardcoreModeEnabled())
                 {
-                	//TODO: Client
-                    this.mc.displayGuiScreen(new OpiatesMainMenu());
+                    this.mc.displayGuiScreen(new GuiMainMenu());
                 }
                 else
                 {
@@ -98,9 +95,7 @@ public class GuiGameOver extends GuiScreen implements GuiYesNoCallback
             }
 
             this.mc.loadWorld((WorldClient)null);
-            
-            //TODO: Client
-            this.mc.displayGuiScreen(new OpiatesMainMenu());
+            this.mc.displayGuiScreen(new GuiMainMenu());
         }
         else
         {
diff --git a/src/net/minecraft/client/gui/GuiIngame.java b/src/net/minecraft/client/gui/GuiIngame.java
index a87d837..e80aefa 100644
--- a/src/net/minecraft/client/gui/GuiIngame.java
+++ b/src/net/minecraft/client/gui/GuiIngame.java
@@ -4,10 +4,6 @@ import com.google.common.base.Predicate;
 import com.google.common.collect.Iterables;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Ordering;
-
-import co.uk.hexeption.opiates.event.api.EventManager;
-import co.uk.hexeption.opiates.event.events.render.EventRender2D;
-
 import java.util.Collection;
 import java.util.List;
 import java.util.Random;
@@ -379,14 +375,6 @@ public class GuiIngame extends Gui
         GlStateManager.disableLighting();
         GlStateManager.enableAlpha();
         String s = this.mc.func_184123_d();
-        
-        //TODO: Client
-        GlStateManager.pushMatrix();
-        final ScaledResolution sr = new ScaledResolution(mc);
-        final EventRender2D event = new EventRender2D(sr.getScaledWidth(), sr.getScaledHeight());
-        EventManager.call(event);
-        GlStateManager.disableBlend();
-        GlStateManager.popMatrix();
     }
 
     private void func_184045_a(float p_184045_1_, ScaledResolution p_184045_2_)
diff --git a/src/net/minecraft/client/gui/GuiIngameMenu.java b/src/net/minecraft/client/gui/GuiIngameMenu.java
index 834faef..762c0d0 100644
--- a/src/net/minecraft/client/gui/GuiIngameMenu.java
+++ b/src/net/minecraft/client/gui/GuiIngameMenu.java
@@ -1,8 +1,6 @@
 package net.minecraft.client.gui;
 
 import java.io.IOException;
-
-import co.uk.hexeption.opiates.gui.OpiatesMainMenu;
 import net.minecraft.client.gui.achievement.GuiAchievements;
 import net.minecraft.client.gui.achievement.GuiStats;
 import net.minecraft.client.multiplayer.WorldClient;
@@ -60,20 +58,16 @@ public class GuiIngameMenu extends GuiScreen
 
                 if (flag)
                 {
-                	//TODO: Client
-                    this.mc.displayGuiScreen(new OpiatesMainMenu());
+                    this.mc.displayGuiScreen(new GuiMainMenu());
                 }
                 else if (flag1)
                 {
                     RealmsBridge realmsbridge = new RealmsBridge();
-                    
-                    //TODO: Client
-                    realmsbridge.switchToRealms(new OpiatesMainMenu());
+                    realmsbridge.switchToRealms(new GuiMainMenu());
                 }
                 else
                 {
-                	//TODO: Client
-                    this.mc.displayGuiScreen(new GuiMultiplayer(new OpiatesMainMenu()));
+                    this.mc.displayGuiScreen(new GuiMultiplayer(new GuiMainMenu()));
                 }
 
             case 2:
diff --git a/src/net/minecraft/client/gui/GuiMemoryErrorScreen.java b/src/net/minecraft/client/gui/GuiMemoryErrorScreen.java
index 7ce8a76..e943b88 100644
--- a/src/net/minecraft/client/gui/GuiMemoryErrorScreen.java
+++ b/src/net/minecraft/client/gui/GuiMemoryErrorScreen.java
@@ -1,8 +1,6 @@
 package net.minecraft.client.gui;
 
 import java.io.IOException;
-
-import co.uk.hexeption.opiates.gui.OpiatesMainMenu;
 import net.minecraft.client.resources.I18n;
 
 public class GuiMemoryErrorScreen extends GuiScreen
@@ -25,8 +23,7 @@ public class GuiMemoryErrorScreen extends GuiScreen
     {
         if (button.id == 0)
         {
-        	//TODO: Client
-            this.mc.displayGuiScreen(new OpiatesMainMenu());
+            this.mc.displayGuiScreen(new GuiMainMenu());
         }
         else if (button.id == 1)
         {
diff --git a/src/net/minecraft/client/main/Main.java b/src/net/minecraft/client/main/Main.java
index f2ac0d0..96e3c33 100644
--- a/src/net/minecraft/client/main/Main.java
+++ b/src/net/minecraft/client/main/Main.java
@@ -40,8 +40,8 @@ public class Main
         OptionSpec<String> optionspec10 = optionparser.accepts("uuid").withRequiredArg();
         OptionSpec<String> optionspec11 = optionparser.accepts("accessToken").withRequiredArg().required();
         OptionSpec<String> optionspec12 = optionparser.accepts("version").withRequiredArg().required();
-        OptionSpec<Integer> optionspec13 = optionparser.accepts("width").withRequiredArg().ofType(Integer.class).defaultsTo(Integer.valueOf(1280), new Integer[0]);
-        OptionSpec<Integer> optionspec14 = optionparser.accepts("height").withRequiredArg().ofType(Integer.class).defaultsTo(Integer.valueOf(720), new Integer[0]);
+        OptionSpec<Integer> optionspec13 = optionparser.accepts("width").withRequiredArg().ofType(Integer.class).defaultsTo(Integer.valueOf(854), new Integer[0]);
+        OptionSpec<Integer> optionspec14 = optionparser.accepts("height").withRequiredArg().ofType(Integer.class).defaultsTo(Integer.valueOf(480), new Integer[0]);
         OptionSpec<String> optionspec15 = optionparser.accepts("userProperties").withRequiredArg().defaultsTo("{}", new String[0]);
         OptionSpec<String> optionspec16 = optionparser.accepts("profileProperties").withRequiredArg().defaultsTo("{}", new String[0]);
         OptionSpec<String> optionspec17 = optionparser.accepts("assetIndex").withRequiredArg();
diff --git a/src/net/minecraft/client/network/NetHandlerPlayClient.java b/src/net/minecraft/client/network/NetHandlerPlayClient.java
index a102b63..3d96d60 100644
--- a/src/net/minecraft/client/network/NetHandlerPlayClient.java
+++ b/src/net/minecraft/client/network/NetHandlerPlayClient.java
@@ -1,5 +1,10 @@
 package net.minecraft.client.network;
 
+import com.google.common.collect.Maps;
+import com.google.common.util.concurrent.FutureCallback;
+import com.google.common.util.concurrent.Futures;
+import com.mojang.authlib.GameProfile;
+import io.netty.buffer.Unpooled;
 import java.io.File;
 import java.io.IOException;
 import java.net.URI;
@@ -7,20 +12,9 @@ import java.net.URISyntaxException;
 import java.util.Collection;
 import java.util.List;
 import java.util.Map;
-import java.util.Map.Entry;
 import java.util.Random;
 import java.util.UUID;
-
-import org.apache.logging.log4j.LogManager;
-import org.apache.logging.log4j.Logger;
-
-import com.google.common.collect.Maps;
-import com.google.common.util.concurrent.FutureCallback;
-import com.google.common.util.concurrent.Futures;
-import com.mojang.authlib.GameProfile;
-
-import co.uk.hexeption.opiates.gui.OpiatesMainMenu;
-import io.netty.buffer.Unpooled;
+import java.util.Map.Entry;
 import net.minecraft.block.Block;
 import net.minecraft.client.ClientBrandRetriever;
 import net.minecraft.client.Minecraft;
@@ -33,6 +27,7 @@ import net.minecraft.client.gui.GuiCommandBlock;
 import net.minecraft.client.gui.GuiDisconnected;
 import net.minecraft.client.gui.GuiDownloadTerrain;
 import net.minecraft.client.gui.GuiGameOver;
+import net.minecraft.client.gui.GuiMainMenu;
 import net.minecraft.client.gui.GuiMerchant;
 import net.minecraft.client.gui.GuiMultiplayer;
 import net.minecraft.client.gui.GuiScreen;
@@ -235,6 +230,8 @@ import net.minecraft.world.WorldProviderSurface;
 import net.minecraft.world.WorldSettings;
 import net.minecraft.world.chunk.Chunk;
 import net.minecraft.world.storage.MapData;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 
 public class NetHandlerPlayClient implements INetHandlerPlayClient
 {
@@ -840,8 +837,7 @@ public class NetHandlerPlayClient implements INetHandlerPlayClient
         }
         else
         {
-        	//TODO: Client
-            this.gameController.displayGuiScreen(new GuiDisconnected(new GuiMultiplayer(new OpiatesMainMenu()), "disconnect.lost", reason));
+            this.gameController.displayGuiScreen(new GuiDisconnected(new GuiMultiplayer(new GuiMainMenu()), "disconnect.lost", reason));
         }
     }
 
diff --git a/src/shadersmod/client/Shaders.java b/src/shadersmod/client/Shaders.java
index dbcae18..050f4e5 100644
--- a/src/shadersmod/client/Shaders.java
+++ b/src/shadersmod/client/Shaders.java
@@ -745,7 +745,7 @@ public class Shaders
             }
 
             updateBlockLightLevel();
-//            mc.scheduleResourcesRefresh();
+            mc.scheduleResourcesRefresh();
         }
     }
 
@@ -3017,6 +3017,7 @@ public class Shaders
     public static void beginRender(Minecraft minecraft, float partialTicks, long finishTimeNano)
     {
         checkGLError("pre beginRender");
+        checkWorldChanged(mc.theWorld);
         mc = minecraft;
         mc.mcProfiler.startSection("init");
         entityRenderer = mc.entityRenderer;
